#!/usr/bin/env ruby

require "dotenv/load"
require "optparse"
require "yaml"
require_relative "./lib/pwmate"

@options = {}
parser = OptionParser.new do |parser|
  parser.banner = "Usage: pwmate [options] -f FILE"
  parser.on("-f", "--file FILE", "YAML input file") do |file|
    @options[:file] = file
  end
  parser.on("-n", "--no-op", "only login, no password change") do
    @options[:no_op] = true
  end
end

begin
  parser.parse!(ARGV)
  unless @options[:file]
    raise OptionParser::ParseError.new("input file is required")
  end
rescue OptionParser::ParseError => e
  puts e
  puts
  puts parser.help
  exit 1
end

pwmate = Pwmate.new(@options)
input = YAML.load_file(@options[:file])
input["accounts"].each do |account|
  puts "# Account #{account["name"]}"
  @current_password = pwmate.get_current_password(account["secret_stores"].first)
  @new_password = pwmate.generate_password(32)
  if @current_password
    if @options[:no_op]
      if pwmate.login_account(account, @current_password)
        puts "# Logged in successfully."
      else
        puts "# Can't log-in into account."
      end
    else
      if pwmate.update_account(account, @current_password, @new_password)
        account["secret_stores"].each do |store|
          pwmate.set_new_password(store, @new_password)  
        end
        puts "# Account has been updated."
      else
        puts "# Can't update account."
      end
    end
  end
end